import numpy as np

def get_matrix_input(rows, cols):
    print(f"Enter elements for a {rows}x{cols} matrix:")
    matrix = []
    for i in range(rows):
        while True:
            try:
                row = list(map(int, input(f"Enter row {i + 1} values separated by space: ").split()))
                if len(row) != cols:
                    raise ValueError(f"Row must have exactly {cols} elements.")
                matrix.append(row)
                break
            except ValueError as e:
                print(f"Invalid input: {e}. Please try again.")
    return np.array(matrix)

def get_dimension_input(prompt):
    while True:
        try:
            value = int(input(prompt))
            if value <= 0:
                raise ValueError("Value must be a positive integer.")
            return value
        except ValueError as e:
            print(f"Invalid input: {e}. Please enter a positive integer.")

# Get matrix dimensions with error handling
rows = get_dimension_input("Enter the number of rows for the matrices: ")
cols = get_dimension_input("Enter the number of columns for the matrices: ")

# Get matrices
print("\nMatrix A:")
matrix_a = get_matrix_input(rows, cols)
print("\nMatrix B:")
matrix_b = get_matrix_input(rows, cols)

# Display matrices
print("\nMatrix A:")
print(matrix_a)
print("\nMatrix B:")
print(matrix_b)

# Perform operations
while True:
    print("\nChoose an operation:")
    print("1. Addition")
    print("2. Subtraction")
    print("3. Multiplication")
    print("4. Transpose of Matrix A")
    print("5. Transpose of Matrix B")
    print("6. Surprise")

    choice = input("Enter choice (1-6): ")

    if choice == '1':
        result = matrix_a + matrix_b
        print("\nResult of Addition:")
        print(result)

    elif choice == '2':
        result = matrix_a - matrix_b
        print("\nResult of Subtraction:")
        print(result)

    elif choice == '3':
        if matrix_a.shape[1] == matrix_b.shape[0]:  # Check if matrices are compatible for multiplication
            result = np.dot(matrix_a, matrix_b)
            print("\nResult of Multiplication:")
            print(result)
        else:
            print("Multiplication not possible due to incompatible dimensions.")

    elif choice == '4':
        print("\nTranspose of Matrix A:")
        print(matrix_a.T)

    elif choice == '5':
        print("\nTranspose of Matrix B:")
        print(matrix_b.T)

    elif choice == '6':
        print("\nNo more operations BYEE!!")
        break

    else:
        print("Invalid choice. Please choose a valid option.")
